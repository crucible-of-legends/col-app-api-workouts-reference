version: '3'

services:

    nginx:
        container_name: nginx-${PROJECT}
        build: ./.docker/nginx/${NGINX_VERSION}
        restart: "${RESTART_POLICIES}"
        depends_on:
            - php
        ports:
            - "${NGINX_PORT}:80"
            - "${NGINX_PORT_TLS}:443"
        environment:
            SERVER_NAME: ${SERVER_NAME}
            PHP_ADDRESS: ${PHP_ADDRESS}
            TZ: ${TIMEZONE}
        volumes:
            - ./public:/usr/share/nginx/html
        networks:
            - "crucible-of-heroes-v2"

    php:
        container_name: php-${PROJECT}
        image: ${PROJECT}_php-fpm:${PHP_VERSION}
        env_file:
          - .env
          - .env.local
        build:
          context: ./.docker/php-fpm/${PHP_VERSION}
          args:
            DOCKER_USER: <DOCKER_USER>
            DOCKER_USER_ID: <DOCKER_USER_ID>
        restart: ${RESTART_POLICIES}
        environment:
          COMPOSER_MEMORY_LIMIT: -1
          SSH_AUTH_SOCK: /ssh-agent
          TZ: ${TIMEZONE}
        volumes:
          - ${PWD}:/var/www/html
          - $SSH_AUTH_SOCK:/ssh-agent
        working_dir: /var/www/html
        user: "<DOCKER_USER>"
        entrypoint:
          - ""
        command:
          - "php-fpm"
        networks:
          - "crucible-of-heroes-v2"

    mysql-reference:
        container_name: mysql-${PROJECT}
        build:
          context: ./.docker/mysql/${MYSQL_VERSION}
        ports:
          - ${MYSQL_PORT}
        environment:
          MYSQL_DATABASE: ${MYSQL_DB_NAME}
          MYSQL_ROOT_USER: ${MYSQL_USER}
          MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
          MYSQL_USER: ${MYSQL_USER}
          MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
          - ${PWD}:/var/www/html
        working_dir: /var/www/html
        networks:
          - "crucible-of-heroes-v2"

networks:
    crucible-of-heroes-v2:
        driver: bridge
